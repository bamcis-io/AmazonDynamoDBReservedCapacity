{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "Creates a Glue database and table for the DynamoDB price list data",

	"Parameters" : {
	},

	"Resources" : {
		"S3Bucket" : {
		    "Type" : "AWS::S3::Bucket",
			"Properties" : {
			    "BucketName" : "mhaken-pricelist-database"
			}
		},

		"GlueDatabase" : {
			"Type" : "AWS::Glue::Database",
			"Properties" : {
			    "CatalogId" : {
				    "Ref" : "AWS::AccountId"
				},
				"DatabaseInput" : {
				    "Name" : "pricelist_database"
				}
			}
		},

		"GlueDynamoDBTableRaw" : {
		    "Type" : "AWS::Glue::Table",
			"Properties" : {
			    "CatalogId" : {
			        "Ref" : "AWS::AccountId"
			    },
				"DatabaseName" : {
					"Ref" : "GlueDatabase"
				},
				"TableInput" : {
				    "Name" : "dynamodb_raw",
					"TableType" : "EXTERNAL_TABLE",
					"Parameters" : {
					    "classification" : "csv",
						"columnsOrdered" : "true",
						"compressionType" : "none",
						"delimiter" : ",",
						"typeOfData" : "file"
					},
					"StorageDescriptor" : {
					    "InputFormat" : "org.apache.hadoop.mapred.TextInputFormat",
						"OutputFormat" : "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
						"SerdeInfo" : {
						    "Name" : "OpenCSVSerDe",
							"SerializationLibrary" : "org.apache.hadoop.hive.serde2.OpenCSVSerde",
							"Parameters" : {
							    "skip.header.line.count" : "6",
								"field.delim" : ","
							}
						},
						"Parameters": {
							"compressionType": "none", 
							"classification": "csv", 
							"typeOfData": "file", 
							"columnsOrdered": "true", 
							"delimiter": ","
						}, 
						"Location" : {
                            "Fn::Sub" : "s3://${S3Bucket}/dynamodb_raw"
                        },
						"Columns": [
                            {
                                "Type": "string", 
                                "Name": "sku"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "offertermcode"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "ratecode"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "termtype"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "pricedescription"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "effectivedate"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "startingrange"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "endingrange"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "unit"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "priceperunit"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "currency"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "leasecontractlength"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "purchaseoption"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "offeringclass"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "product family"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "servicecode"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "location"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "location type"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "volume type"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "group"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "group description"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "usagetype"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "operation"
                            }, 
                            {
                                "Type": "string", 
                                "Name": "servicename"
                            }
                        ], 
                        "Compressed": false
					}
				}
			}
		},

        "GlueDynamoDBTableFormatted" : {
		    "Type" : "AWS::Glue::Table",
			"Properties" : {
			    "CatalogId" : {
			        "Ref" : "AWS::AccountId"
			    },
				"DatabaseName" : {
					"Ref" : "GlueDatabase"
				},
				"TableInput" : {
				    "Name" : "dynamodb_formatted",
					"TableType" : "EXTERNAL_TABLE",
					"Parameters" : {
					    "classification" : "parquet",
						"EXTERNAL" : "true",
						"compressionType" : "gzip",
						"has_encrypted_data" : "false"
					},
					"StorageDescriptor" : {
					    "InputFormat" : "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
						"OutputFormat" : "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
						"SerdeInfo" : {
						    "Name" : "ParquetHiveSerDe",
							"SerializationLibrary" : "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
						},
						"Parameters": {
							"compressionType": "gzip", 
							"classification": "parquet"
						}, 
						"Location" : {
                            "Fn::Sub" : "s3://${S3Bucket}/dynamodb_formatted"
                        },
						"Columns": [
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "sku"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "offertermcode"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "ratecode"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "platform"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "usagetype"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "varchar(14)", 
                                "Name": "region"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "service"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "adjustedpriceperunit"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "ondemandhourlycost"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "breakevenpercentage"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "upfrontfee"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "int", 
                                "Name": "leaseterm"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "purchaseoption"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "offeringclass"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "string", 
                                "Name": "key"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "reservedinstancecost"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "ondemandcostforterm"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "costsavings"
                            }, 
                            {
                                "Comment": "", 
                                "Type": "double", 
                                "Name": "percentsavings"
                            }
                        ], 
                        "Compressed": false
					}
				}
			}
		},

        "AthenaQuery" : {
            "Type" : "AWS::Athena::NamedQuery",
            "Properties" : {
                "Database" : {
                    "Ref" : "GlueDatabase"
                },
                "Name" : "Insert-Into-DDB-Price-List-Formatted",
                "QueryString" : {
                    "Fn::Join" : [
                        "\n",
                        [
{
    "Fn::Sub" : "INSERT INTO \"${GlueDatabase}\".\"${GlueDynamoDBTableFormatted}\""
},
"WITH",
"  region_map",
"AS(",
"    SELECT",
"      MAP_AGG(abbr, regioncode) AS map",
"    FROM",
"        (",
"          VALUES",
"          ( '', 'us-east-1'),",
"          ( 'USE1', 'us-east-1'),",
"          ( 'USE2', 'us-east-2' ),",
"          ( 'USW1', 'us-west-1' ),",
"          ( 'USW2', 'us-west-2' ),",
"          ( 'UGW1', 'us-gov-west-1' ),",
"          ( 'UGE1', 'us-gov-east-1' ),",
"          ( 'CAN1', 'ca-central-1' ),",
"          ( 'APN1', 'ap-northeast-1' ),",
"          ( 'APN2', 'ap-northeast-2' ),",
"          ( 'APN3', 'ap-northeast-3' ),",
"          ( 'APS1', 'ap-southeast-1' ),",
"          ( 'APS2', 'ap-southeast-2' ),",
"          ( 'APS3', 'ap-south-1' ),",
"          ( 'APE1', 'ap-east-1' ),",
"          ( 'SAE1', 'sa-east-1' ),",
"          ( 'EU',   'eu-west-1' ),",
"          ( 'EUC1', 'eu-central-1' ),",
"          ( 'EUW2', 'eu-west-2' ),",
"          ( 'EUW3', 'eu-west-3' ),",
"          ( 'EUN1', 'eu-north-1' ),",
"          ( 'MES1', 'me-south-1' ),",
"          ( 'CNN1', 'cn-north-1' ),",
"          ( 'CNN2', 'cn-northwest-1')",
"        )",
"        AS t1(abbr, regioncode)",
"),",

"  reserved_capacity",
"AS(",
"  SELECT",
"      reserved.sku,",
"      MAX(reserved.offertermcode) AS offertermcode,",
"      MAX(reserved.ratecode) AS ratecode,",
"      MAX(reserved.\"group\") AS platform,",
"      CAST(MAX(DISTINCT ondemand.priceperunit) AS DOUBLE) AS ondemandhourlycost,",
"      MAX(reserved.offeringclass) AS offeringclass,",
"      reserved.usagetype,",
"      reserved.servicename,",
"      reserved.location AS region,",
"      CAST(substr(reserved.leasecontractlength, 1, 1) AS INTEGER) AS leasecontractlength,",
"      reserved.purchaseoption,",
"      CAST(array_max(map_values(map_filter(MAP_AGG(reserved.pricedescription, reserved.priceperunit), (key, value) -> key = 'Upfront Fee'))) AS DOUBLE) AS upfrontfee,",
"      CAST(array_max(map_values(map_filter(MAP_AGG(reserved.pricedescription, reserved.priceperunit), (key, value) -> key != 'Upfront Fee'))) AS DOUBLE) AS recurring",
"  FROM",
{
    "Fn::Sub" : "\"${GlueDatabase}\".\"${GlueDynamoDBTableRaw}\" AS reserved"
},
"  INNER JOIN",
{
    "Fn::Sub" : "\"${GlueDatabase}\".\"${GlueDynamoDBTableRaw}\" AS ondemand"
},
"  ON", 
"      reserved.sku = ondemand.sku",
"        AND",
"      ondemand.termtype = 'OnDemand'",
"        AND",
"      reserved.termtype = 'Reserved'",
"        AND",
"      NOT regexp_like(ondemand.pricedescription, '\\(free tier\\)')",
"        AND",
"      ondemand.endingrange = 'Inf'",
"  GROUP BY",
"    reserved.sku,",
"    reserved.usagetype,",
"    reserved.leasecontractlength,",
"    reserved.purchaseoption,",
"    reserved.location,",
"    reserved.servicename",
"),",

"    interim",
"AS(",

"SELECT",
"    sku,", 
"    offertermcode,",
"    ratecode,",
"    platform,",
"    usagetype,",
"    region_map.map[COALESCE( regexp_extract(usagetype, '^([a-zA-Z]{2,3}[0-9]*)(-.*)$', 1), '')] AS region,",
"    servicename AS service,",
"    recurring AS adjustedpriceperunit,",
"    ondemandhourlycost,",
"    upfrontfee,",
"    leasecontractlength as leaseterm,",
"    purchaseoption,",
"    offeringclass,",
"    concat(CAST(leasecontractlength AS varchar), '::', replace(upper(purchaseoption), ' ', ''), '::', upper(offeringclass)) AS key,",
"    ((leasecontractlength * 365 * 24 * recurring) + upfrontfee) AS reservedinstancecost,",
"    (leasecontractlength * 365 * 24 * ondemandhourlycost) AS ondemandcostforterm,",
"    ((upfrontfee + (365 * leasecontractlength * 24 * recurring)) / (365 * leasecontractlength * 24 * ondemandhourlycost)) AS breakevenpercentage",
"FROM",
"    reserved_capacity,",
"    region_map",
")",

"SELECT",
"    sku,", 
"    offertermcode,",
"    ratecode,",
"    platform,", 
"    usagetype,",
"    region,",
"    service,",
"    adjustedpriceperunit,",
"    ondemandhourlycost,",
"    breakevenpercentage,",
"    upfrontfee,",
"    leaseterm,",
"    purchaseoption,",
"    offeringclass,",
"    key,",
"    reservedinstancecost,",
"    ondemandcostforterm,",
"    (ondemandcostforterm - reservedinstancecost) AS costsavings,",
"    ((ondemandcostforterm - reservedinstancecost) / ondemandcostforterm) * 100 AS percentsavings",
"FROM interim"
                        ]
                    ]
                }
            }
        }
	},

	"Outputs" : {
	}
}
